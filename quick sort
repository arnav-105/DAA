#include<stdio.h>
void swap(int *a, int *b)
{
int temp = *a;
*a = *b;
= temp;
}
int partition(int arr[], int low, int high)
{
→int pivot = arr[high];
int i = (1ow - 1) ;
for(int j = low; j < high; j++)
{
if(arr[j] < pivot)
kkk
{
i++;
swap(&arr[i], &arr[j]);
K
→swap(&arr[i+1], &arr[high]);
return (i+1);
void quickSort(int arr[], int low, int high)
{
if(low high)
{
int pi partition(arr, low, high);
printf("Pass: ");
→→→for(int i = low; i <= high; i++)
printf("%d ", arr[i]);
}
printf("\n");
quickSort(arr, low, pi-1);
quickSort(arr, pi+1, high);
}
int main()
{
int n;
printf("number of elements: ");
scanf("%d", &n);
→int arr[n];
→printf("elements: ");
K for(int i = 0; i < n; i++)
scanf("%d", &arr[i]);
→printf("Original array: ");
for(int i = 0; i < n;i++)
printf("%d", arr[i]);
printf("\n");
→quickSort(arr, 0, n-1);
→printf("Sorted array: ");
for(int i = 0 i < n;i++)
{
printf("%d", arr[i]);
}
→printf("\n");
return 0;
}
